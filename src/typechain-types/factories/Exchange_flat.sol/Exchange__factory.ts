/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Exchange,
  ExchangeInterface,
} from "../../Exchange_flat.sol/Exchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAccount",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NoBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "NotApprovedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughTokens",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountGet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGive",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountGive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Cancel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountGet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGive",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountGive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Order",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountGet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenGive",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountGive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenGet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountGet",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenGive",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountGive",
        type: "uint256",
      },
    ],
    name: "makeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderCancelled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderFilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenGet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountGet",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenGive",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountGive",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c9d38038062001c9d83398181016040528101906200003791906200012b565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550505062000172565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b8826200008b565b9050919050565b620000ca81620000ab565b8114620000d657600080fd5b50565b600081519050620000ea81620000bf565b92915050565b6000819050919050565b6200010581620000f0565b81146200011157600080fd5b50565b6000815190506200012581620000fa565b92915050565b6000806040838503121562000145576200014462000086565b5b60006200015585828601620000d9565b9250506020620001688582860162000114565b9150509250929050565b611b1b80620001826000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806367b830ad1161008c5780639e281a98116100665780639e281a98146101fe578063a85c38ef1461021a578063e9c1896614610250578063f7888aec14610280576100cf565b806367b830ad146101a85780637fd6f15c146101c45780639a5c90aa146101e2576100cf565b80632453ffa8146100d4578063338b5dea146100f25780634a93e0da1461010e578063508493bc1461013e578063514fcac71461016e57806365e17c9d1461018a575b600080fd5b6100dc6102b0565b6040516100e991906114ec565b60405180910390f35b61010c60048036038101906101079190611596565b6102b6565b005b610128600480360381019061012391906115d6565b610540565b604051610135919061161e565b60405180910390f35b61015860048036038101906101539190611639565b610560565b60405161016591906114ec565b60405180910390f35b610188600480360381019061018391906115d6565b610585565b005b6101926106cf565b60405161019f9190611688565b60405180910390f35b6101c260048036038101906101bd91906115d6565b6106f3565b005b6101cc61086b565b6040516101d991906114ec565b60405180910390f35b6101fc60048036038101906101f791906116a3565b610871565b005b61021860048036038101906102139190611596565b610aa0565b005b610234600480360381019061022f91906115d6565b610da9565b604051610247979695949392919061170a565b60405180910390f35b61026a600480360381019061026591906115d6565b610e4b565b604051610277919061161e565b60405180910390f35b61029a60048036038101906102959190611639565b610e6b565b6040516102a791906114ec565b60405180910390f35b60065481565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016102f393929190611779565b602060405180830381600087803b15801561030d57600080fd5b505af1158015610321573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034591906117dc565b61037b576040517ffd05444000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104039190611838565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7823383600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610534949392919061188e565b60405180910390a15050565b60056020528060005260406000206000915054906101000a900460ff1681565b6002602052816000526040600020602052806000526040600020600091509150505481565b60006003600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105f857600080fd5b8181600001541461060857600080fd5b60016004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055507f77de1da0be5f2d3b110d05c6694e5c4ff2d9da7cd23d84353ecf78c7b5acec618160000154338360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301548560040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660050154426040516106c3979695949392919061170a565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008111801561070557506006548111155b610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b90611930565b60405180910390fd5b6005600082815260200190815260200160002060009054906101000a900460ff161561076f57600080fd5b6004600082815260200190815260200160002060009054906101000a900460ff161561079a57600080fd5b600060036000838152602001908152602001600020905061083781600001548260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301548560040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168660050154610ef2565b6001600560008360000154815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60015481565b8061087c8333610e6b565b10156108b4576040517fc2caa2a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016006546108c39190611838565b6006819055506040518060e0016040528060065481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001828152602001428152506003600060065481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c082015181600601559050507f9d33853d43e3607b4cc01fdc78338ff2dca6fef7db9232dae6d3eb55fbc3b109600654338686868642604051610a92979695949392919061170a565b60405180910390a150505050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b56576040517f22bbb43c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b91929190611950565b602060405180830381600087803b158015610bab57600080fd5b505af1158015610bbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be391906117dc565b5080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c6c9190611979565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567823383600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610d9d949392919061188e565b60405180910390a15050565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154905087565b60046020528060005260406000206000915054906101000a900460ff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000606460015485610f0491906119ad565b610f0e9190611a36565b90508084610f1c9190611838565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fa39190611979565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555083600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ab9190611838565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111d49190611838565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112fd9190611979565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114059190611838565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f0dddf4182dc0fc1a311cb75f049c97403c6b8a99cf6b2229a36e7c526acb3f818733878787878c426040516114c2989796959493929190611a67565b60405180910390a150505050505050565b6000819050919050565b6114e6816114d3565b82525050565b600060208201905061150160008301846114dd565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115378261150c565b9050919050565b6115478161152c565b811461155257600080fd5b50565b6000813590506115648161153e565b92915050565b611573816114d3565b811461157e57600080fd5b50565b6000813590506115908161156a565b92915050565b600080604083850312156115ad576115ac611507565b5b60006115bb85828601611555565b92505060206115cc85828601611581565b9150509250929050565b6000602082840312156115ec576115eb611507565b5b60006115fa84828501611581565b91505092915050565b60008115159050919050565b61161881611603565b82525050565b6000602082019050611633600083018461160f565b92915050565b600080604083850312156116505761164f611507565b5b600061165e85828601611555565b925050602061166f85828601611555565b9150509250929050565b6116828161152c565b82525050565b600060208201905061169d6000830184611679565b92915050565b600080600080608085870312156116bd576116bc611507565b5b60006116cb87828801611555565b94505060206116dc87828801611581565b93505060406116ed87828801611555565b92505060606116fe87828801611581565b91505092959194509250565b600060e08201905061171f600083018a6114dd565b61172c6020830189611679565b6117396040830188611679565b61174660608301876114dd565b6117536080830186611679565b61176060a08301856114dd565b61176d60c08301846114dd565b98975050505050505050565b600060608201905061178e6000830186611679565b61179b6020830185611679565b6117a860408301846114dd565b949350505050565b6117b981611603565b81146117c457600080fd5b50565b6000815190506117d6816117b0565b92915050565b6000602082840312156117f2576117f1611507565b5b6000611800848285016117c7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611843826114d3565b915061184e836114d3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561188357611882611809565b5b828201905092915050565b60006080820190506118a36000830187611679565b6118b06020830186611679565b6118bd60408301856114dd565b6118ca60608301846114dd565b95945050505050565b600082825260208201905092915050565b7f4f7264657220646f6573206e6f74206578697374000000000000000000000000600082015250565b600061191a6014836118d3565b9150611925826118e4565b602082019050919050565b600060208201905081810360008301526119498161190d565b9050919050565b60006040820190506119656000830185611679565b61197260208301846114dd565b9392505050565b6000611984826114d3565b915061198f836114d3565b9250828210156119a2576119a1611809565b5b828203905092915050565b60006119b8826114d3565b91506119c3836114d3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156119fc576119fb611809565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a41826114d3565b9150611a4c836114d3565b925082611a5c57611a5b611a07565b5b828204905092915050565b600061010082019050611a7d600083018b6114dd565b611a8a602083018a611679565b611a976040830189611679565b611aa460608301886114dd565b611ab16080830187611679565b611abe60a08301866114dd565b611acb60c0830185611679565b611ad860e08301846114dd565b999850505050505050505056fea26469706673582212207232589494dcc42c0663d49dc6a4c5a1e58b4850c5d3f76e0f5e1104d48c30fa64736f6c63430008090033";

type ExchangeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exchange__factory extends ContractFactory {
  constructor(...args: ExchangeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feeAccount: PromiseOrValue<string>,
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Exchange> {
    return super.deploy(
      _feeAccount,
      _feePercent,
      overrides || {}
    ) as Promise<Exchange>;
  }
  override getDeployTransaction(
    _feeAccount: PromiseOrValue<string>,
    _feePercent: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeAccount,
      _feePercent,
      overrides || {}
    );
  }
  override attach(address: string): Exchange {
    return super.attach(address) as Exchange;
  }
  override connect(signer: Signer): Exchange__factory {
    return super.connect(signer) as Exchange__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeInterface {
    return new utils.Interface(_abi) as ExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exchange {
    return new Contract(address, _abi, signerOrProvider) as Exchange;
  }
}
